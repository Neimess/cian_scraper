name: cian_bot
on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

jobs:
  linter:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Python Dependencies
        uses: ./.github/actions/common-steps

      - name: Run Linter
        run: uv run ruff check . --no-cache

  tests:
    name: Pytest
    needs: [linter]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Python Dependencies
        uses: ./.github/actions/common-steps

      - name: Create .env file from ENV_FILE
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          if [[ -z "$ENV_FILE" ]]; then
            echo "Error: ENV_FILE is empty!" >&2
            exit 1
          fi
          echo "$ENV_FILE" > .env

      - name: Export environment variables
        run: export $(grep -v '^#' .env | xargs)

      - name: Run tests
        run: uv run pytest tests -s -vv --color=yes

  build:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            neimes/cian_scraper:latest
            neimes/cian_scraper:${{ github.sha }}
          file: Dockerfile
          cache-from: type=registry,ref=neimes/cian_scraper:latest
          cache-to: type=inline

  deploy:
    name: Deploy to Server
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup SSH key
        run: |
          if [[ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]]; then
            echo "Error: SSH_PRIVATE_KEY is empty!" >&2
            exit 1
          fi
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Transfer .env file to server
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo "${{ secrets.ENV_FILE }}" | ssh -o StrictHostKeyChecking=no -i key.pem $SERVER_USER@$SERVER_HOST "cat > /home/$SERVER_USER/cian_scraper/.env"

      - name: Deploy
        env:
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem $SERVER_USER@$SERVER_HOST << 'EOF'
            set -e

            cd $HOME/cian_scraper

            echo "Pulling latest images..."
            docker-compose pull

            echo "Stopping old containers..."
            docker-compose down

            echo "Starting new containers..."
            docker-compose up -d --force-recreate

            echo "Deployment successful!"
          EOF
